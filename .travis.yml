# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: xenial
language: rust
services: docker

env:
  global:
    - CRATE_NAME=the-way

addons:
  apt:
    packages:
    - libxcb-xfixes0-dev
    - xorg-dev
    - python3

matrix:
  allow_failures:
    - rust: nightly
  # These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Android
    #    - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    #    - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    #    - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    #    - env: TARGET=i686-linux-android DISABLE_TESTS=1
    #    - env: TARGET=x86_64-linux-android DISABLE_TESTS=1

    # iOS
    #    - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
    #      os: osx
    #    - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
    #      os: osx
    #    - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
    #      os: osx
    #    - env: TARGET=i386-apple-ios DISABLE_TESTS=1
    #      os: osx
    #    - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
    #      os: osx

    # Linux
    #    - env: TARGET=aarch64-unknown-linux-gnu
    #    - env: TARGET=arm-unknown-linux-gnueabi
    #    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
      os: linux
    #    - env: TARGET=i686-unknown-linux-musl
    #    - env: TARGET=mips-unknown-linux-gnu
    #    - env: TARGET=mips64-unknown-linux-gnuabi64
    #    - env: TARGET=mips64el-unknown-linux-gnuabi64
    #    - env: TARGET=mipsel-unknown-linux-gnu
    #    - env: TARGET=powerpc-unknown-linux-gnu
    #    - env: TARGET=powerpc64-unknown-linux-gnu
    #    - env: TARGET=powerpc64le-unknown-linux-gnu
    #    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
      os: linux
    #    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    #    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    #    - env: TARGET=x86_64-pc-windows-gnu

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    #        - env: TARGET=x86_64-unknown-linux-gnu
    #          rust: nightly
    #          os: linux
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: ZhXmFsPnrNBlN3AM24tLj1TCrKj5pJ4YXFb03sCoGA8DWAzzczDIPERdsKMQZ8xKiaNw9v6lP4zs2EBqa5SI3DiCrR4/AijPMuhvMYNu217skxwKb8eWCrLjhtzW49UomRJMFdSD6AsCOJgaQwoJkW2OUzy3blOu3rwdVxnbsuQc0xBzDi+CRrA4T8iFvh01lF7irEbi/HMCvlWA/XGzaECMYgoijb14J1TDpIDeWa8Qry2RJjflBBHLHZTDLE2505+FALlrOv7BG3sZtPrROmT66HjCopMqTX+AEsYAhqMUedtn4Ax/SwWaRmmWzbqGzSjp4QmeenZmk0tSMNiD9xVFwEi6HjHZKXc9tazsx2RN8TUNoqqpGX1HPhujyFVKZemmPr/wqM7+TNPdWwWupnIkMy5Shlx3pPE7+KRSoeME33jDFE1uWpEIf3tWKjHbvEATqPLT27q503O/3FxJ3r4lDSMUTZWPOXILA2Y018XC8m1B0S8BI9url1nQtsw63caOt8lqPE9yEyksRhPbTEDidBLjUZSBEqaxkyUzddwOW5HsKk59latM0WjkKNHu6N7CbJe9IfNH92TfftyO42NEbzWFOGBkCoyPUmCMtkteWBSinzcXK9epf32XSHzk3syyOg95vtmVuSH+13H/X8LbdRKDwq3EiLpxy4nDd6M=,
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
